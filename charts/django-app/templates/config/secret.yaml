{{- if and .Values.envSecrets.enabled .Values.envSecrets.create (not .Values.envSecrets.external.enabled) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.envSecrets.name | default (printf "%s-secrets" (include "django.fullname" .)) }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "django.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.postgresql.enabled }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.auth.password | b64enc | quote }}
  {{- end }}

  {{- if .Values.rabbitmq.enabled }}
  RABBITMQ_DEFAULT_PASS: {{ .Values.rabbitmq.auth.password | b64enc | quote }}
  {{- end }}

  # Add other secrets as needed
{{- end }}

{{- if and .Values.envSecrets.enabled .Values.envSecrets.external.enabled -}}
# External Secret configuration using External Secrets Operator
# This is just a reference - uncomment and customize as needed
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: {{ .Values.envSecrets.external.secretName }}
#   namespace: {{ .Values.namespace.name }}
# spec:
#   refreshInterval: "15m"
#   secretStoreRef:
#     name: {{ .Values.envSecrets.external.secretStore }}
#     kind: SecretStore
#   target:
#     name: {{ .Values.envSecrets.external.secretName }}
#     creationPolicy: Owner
#   data:
#   - secretKey: POSTGRES_PASSWORD
#     remoteRef:
#       key: your-secret-path/postgres
#       property: password
#   - secretKey: RABBITMQ_DEFAULT_PASS
#     remoteRef:
#       key: your-secret-path/rabbitmq
#       property: password
{{- end }}